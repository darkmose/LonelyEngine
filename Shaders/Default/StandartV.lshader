#version 330 core
layout (location = 0) in vec3 pos; 
layout (location = 1) in vec2 textPos;
layout (location = 2) in vec3 normal;

layout (std140) uniform Matrices
{
	mat4 view;
	mat4 projection;
};


out vec2 TexturePos;
out vec3 Normal;
out vec3 FragPos;

uniform mat4 model;
uniform vec2 stretch;
uniform vec2 offset;

void main()
{
	FragPos = vec3(model*vec4(pos,1));
	Normal = normalize(normal);
	gl_Position = projection * view * model * vec4(pos.x,pos.y,pos.z,1);
	TexturePos = vec2(textPos.x * stretch.x + offset.x ,1-(textPos.y * stretch.y + offset.y));
}
