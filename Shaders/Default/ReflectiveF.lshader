#version 330 core

in vec3 Pos;
in vec3 FragPos;
in vec3 Normal;
layout (std140) uniform Camera
{
	vec3 cameraPos;
};
	struct Texture
	{
		samplerCube cubeMap;
		samplerCube cube;
	};
	uniform Texture Textures;
	out vec4 color;

void main()
{	
	float k = 1/1.309;
	vec3 I = normalize(FragPos - cameraPos);
    vec3 R = refract(I, normalize(Normal),k);
    color = texture(Textures.cubeMap, R);
}