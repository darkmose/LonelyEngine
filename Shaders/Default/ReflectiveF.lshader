#version 330 core

in vec3 Normal;
in vec3 Position;
in vec3 TexPos;

	struct Texture
	{
		samplerCube cubeMap;
		samplerCube	cube_diffuse;	
	};

	uniform Texture Textures;
	uniform vec3 cameraPos;


out vec4 color;



void main()
{
	float k = 1/1.309;
    vec3 I = normalize(Position - cameraPos);
    vec3 R = refract(I, normalize(Normal),k);
    vec4 sample = vec4(texture(Textures.cubeMap, R).rgb, 1.0);
	color = mix(sample, texture(Textures.cube_diffuse, TexPos),0.35f);
}